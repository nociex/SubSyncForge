name: Sync Subscriptions

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:        # 支持手动触发
  
jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # 显式授予写入权限
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0    # 获取完整历史记录
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false
          
      - name: Check Directory Structure
        run: |
          echo "检查目录结构..."
          ls -la
          echo "检查config目录..."
          ls -la config || echo "config目录不存在"
          echo "检查config目录内容..."
          ls -la config/* || echo "config目录为空"
          echo "检查output目录..."
          mkdir -p output
          ls -la output
          echo "检查data目录..."
          mkdir -p data
          ls -la data
          echo "检查当前工作目录..."
          pwd
          echo "确认GitHub工作路径..."
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          
      - name: Install Dependencies
        run: pnpm install
        working-directory: ${{ github.workspace }}
        
      - name: Create Directories
        run: |
          mkdir -p data
          mkdir -p output
          mkdir -p dist
          echo "检查创建的目录..."
          ls -la
          
      - name: Copy Templates
        run: |
          if [ ! -d "templates" ]; then
            echo "创建templates目录并添加基础模板..."
            mkdir -p templates
            echo '# 基础Mihomo模板' > templates/mihomo.yaml
            echo '[General]' > templates/surge.conf
            echo '{"log":{"level":"info"}}' > templates/singbox.json
            echo '{"inbounds":[],"outbounds":[]}' > templates/v2ray.json
          fi
          echo "验证模板文件..."
          ls -la templates
          
      - name: Build Project
        run: |
          echo "开始构建项目..."
          pnpm run build
          echo "检查构建结果..."
          ls -la dist || echo "dist目录未创建"
          
      - name: Run Sync Script
        env:
          LOG_LEVEL: debug
        run: |
          echo "运行同步脚本..."
          echo "验证配置文件存在..."
          cat config/custom.yaml || echo "无法读取配置文件"
          # 确保配置可用
          ls -la config/
          echo "执行同步脚本..."
          node dist/sync-subscriptions.js || echo "同步脚本执行失败"
          echo "检查output目录..."
          find output -type f | sort
          ls -la output || echo "output目录为空或不存在"
          
      - name: Commit Changes
        run: |
          echo "准备提交更改..."
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions[bot]"
          echo "检查Git状态..."
          git status
          
          # 确保pnpm-lock.yaml不会干扰提交
          git checkout -- pnpm-lock.yaml || echo "无法还原pnpm-lock.yaml"
          
          # 手动添加data和output目录中的所有文件
          echo "添加data目录和output目录的所有文件..."
          git add data/ output/ --force
          
          # 检查是否有变化
          if git diff --cached --quiet; then
            echo "没有检测到变化，创建测试文件..."
            echo "本文件由GitHub Actions自动生成，用于测试工作流 $(date)" > output/test.txt
            git add output/test.txt
            git commit -m "chore: add test file to verify workflow" || echo "无法提交测试文件"
          else
            echo "检测到文件变化，提交更改..."
            git commit -m "chore: update subscriptions" || echo "提交失败"
          fi
          
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}    # 明确指定推送到当前分支
          force: true                  # 强制推送，避免冲突问题