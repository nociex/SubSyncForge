# SubSyncForge 自定义节点配置
# 此文件用于配置订阅源和输出格式

# 订阅源配置 - 所有订阅将被合并
subscriptions:
  # 订阅源列表
  - name: "loc"
    url: "https://kkb.9901158.xyz/loc.yaml"
    enabled: true
  
  - name: "alalbb"
    url: "https://c.alalbb.top/clash"
    enabled: true
  
  - name: "zu"
    url: "https://hssq.cc/5dccpz"
    enabled: true
  
  - name: "ss"
    url: "https://mxlsub.me/newfull"
    enabled: true

  # 示例：Base64编码的节点
  - name: "base64示例"
    type: "base64"
    content: "dm1lc3M6Ly9leUoySWpvaU1pSXNJbkJ6SWpvaVhIVTVPVGs1WEhVMlpUSm1MakY4WjJOd2ZGeDFOV1UzWmx4MU5tVXlabHgxT1dGa09GeDFPVEF4WmlJc0ltRmtaQ0k2SW5Ob2F5NWpaREV5TXpRdWVIbDZJaXdpY0c5eWRDSTZJakkyT0RFNUlpd2lhV1FpT2lKbVpqTmxOak01TkMwMll6TmxMVFJpWVdFdFlUUTROaTFrWWpnMU5XWmtORFV4TURRaUxDSmhhV1FpT2lJd0lpd2libVYwSWpvaWQzTWlMQ0owZVhCbElqb2libTl1WlNJc0ltaHZjM1FpT2lKc2FXNTFhR0Z2TG1OdmJTSXNJbkJoZEdnaU9pSmNMM05vYXk1alpERXlNelF1ZUhsNklpd2lkR3h6SWpvaUluMD0="
    enabled: false  # 默认禁用示例
    
  # 示例：直接添加VMess节点
  - name: "VMess示例"
    type: "vmess"
    content: "vmess://eyJ2IjoiMiIsInBzIjoiXHU5OTk5XHU2ZTJmLjFefmdjcH5cdTVlN2ZcdTZlMmZcdTlhZDhcdTkwMWYiLCJhZGQiOiJzaGsuY2QxMjM0LnNpdGUiLCJwb3J0IjoiMjY4MTkiLCJpZCI6ImZmM2U2Mzk0LTZjM2UtNGJhYS1hNDg2LWRiODU1ZmQ0NTEwNCIsImFpZCI6IjAiLCJuZXQiOiJ3cyIsInR5cGUiOiJub25lIiwiaG9zdCI6ImxpbnVoYW8uY29tIiwicGF0aCI6IlwvIiwidGxzIjoiIn0="
    enabled: false  # 默认禁用示例

# 输出配置
output:
  # 是否将节点去重
  deduplication: true
  
  # 输出目录
  dir: "output"
  
  # 数据存储目录
  data_dir: "data"
  
  # 生成的配置文件
  configs:
    # Mihomo (Clash Meta) 配置
    - name: "mihomo"
      template: "templates/mihomo.yaml"
      path: "mihomo.yaml"
      enabled: true
    
    # Surge 配置
    - name: "surge"
      template: "templates/surge.conf"
      path: "surge.conf"
      enabled: true
    
    # Sing-box 配置
    - name: "singbox"
      template: "templates/singbox.json"
      path: "singbox.json"
      enabled: true
    
    # V2Ray 配置 (选择第一个节点作为默认)
    - name: "v2ray"
      template: "templates/v2ray.json"
      path: "v2ray.json"
      enabled: true
      options:
        use_first_node: true

# 测试配置
testing:
  # 是否启用节点测试
  enabled: true
  
  # 测试并发数（同时测试多少个节点）
  concurrency: 5
  
  # 测试超时时间（毫秒）
  timeout: 5000
  
  # 测试URL
  test_url: "http://www.google.com/generate_204"
  
  # 是否只保留测试成功的节点
  filter_invalid: true
  
  # 按延迟排序
  sort_by_latency: true
  
  # 保留延迟低于此值的节点（毫秒，0表示不限制）
  max_latency: 1000
  
  # 保留最大节点数量（0表示不限制）
  max_nodes: 0

# 高级设置
advanced:
  # 缓存过期时间（秒）
  cache_ttl: 3600
  
  # 日志级别: debug, info, warn, error
  log_level: "info"
  
  # 使用代理获取订阅内容
  proxy_for_subscription: false
  
  # 节点排序
  sort_nodes: true
  
  # 定时同步设置（分钟）
  sync_interval: 360
